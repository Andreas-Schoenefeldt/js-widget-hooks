/*! js-widget-hooks - v2.0.3 - 2018-03-04 
 *  A standardized way to initialize and handle clientside widgets. Helps to keep them organized and only to load them if the code should realy be executed. It provides a strong linking of the actual html code with the executed javascript without much hassle.
 */
"use strict";!function(a,b){"object"==typeof module&&module.exports?module.exports=b():"function"==typeof define&&define.amd?define([],b):a.Widgets=b()}(this,function(){var a=function(){"object"==typeof console&&(arguments[0]="[js-widget-hooks] "+arguments[0],console.error.apply(console,arguments))};return{widgetClass:"widget",scriptClass:"dyn-script",vars:{},registered:{},registeredFinalls:{},register:function(b,c,d){this.registered[b]&&a("[WARNING] Widget "+b+" was already registered: Override."),this.registered[b]=[c,d]},init:function(b){var c,d,e=[],f={},g=[],h=this;for(c in this.registered)e[e.length]=[c,this.registered[c][1]],f[c]=[];e.sort(function(a,b){return void 0!==a[1]&&void 0===b[1]?-1:void 0===a[1]&&void 0!==b[1]?1:a[1]<b[1]?1:a[1]>b[1]?-1:0}),b||(b=document.querySelector("body")),b.querySelectorAll("."+h.widgetClass).forEach(function(b){var c=h.widgetClass+"s",d=b.dataset[c];d?d.split(" ").forEach(function(c){void 0!==f[c]?f[c].push(b):(a("No method for widget "+c+" provided on %o",b),b.classList.add(h.widgetClass+"-config-error"))}):(a("missing data-"+c+" attribute on %o",b),b.classList.add(h.widgetClass+"-config-error"))}),e.forEach(function(a){var b=a[0],c=f[b];c.forEach(function(a){g[g.length]=a,h.initSpecific(a,b)}),h.registeredFinalls[b]&&h.registeredFinalls[b](),delete f[b]});for(d in g)g[d].classList.remove(this.widgetClass)},initSpecific:function(b,c,d){var e=this;try{(b.classList.contains(e.widgetClass)||d)&&(this.registered[c][0](b),b.classList.add(e.widgetClass+"-initialized"))}catch(d){return a("Error during execution of widget %o "+c+": "+d.message,b),b.classList.add(e.widgetClass+"-error"),!1}return!0}}});