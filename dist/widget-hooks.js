/*! js-widget-hooks - v1.0.3 - 2015-11-26 
 * A standardized way to initialize and handle clientside widgets. Helps to keep them organized and only to load them if the code should realy be executed.
 */
define(["jquery"],function(a){var b=function(){"object"==typeof console&&console.log.apply(this,arguments)};return{widgetClass:"widget",scriptClass:"dyn-script",vars:{},registered:{},registeredFinalls:{},register:function(a,c,d,e){var f=void 0===d?!1:d;this.registered[a]&&b("[WARNING] Widget "+a+" was already registered: Override."),this.registered[a]=[f,c,e]},init:function(c){var d,e,f,g,h=[],i={},j=[];for(d in this.registered)h[h.length]=[d,this.registered[d][2]],i[d]=[];for(h.sort(function(a,b){return void 0!==a[1]&&void 0==b[1]?-1:void 0==a[1]&&void 0!==b[1]?1:a[1]<b[1]?1:a[1]>b[1]?-1:0}),c||(c=a("body")),c.find("."+this.widgetClass).each(function(){var c,d,e=a(this),f=e.data("widgetname").split(" ");for(d in f)c=f[d],void 0!==i[c]?i[c].push(e):b("No method for widget "+c+" provided")}),e=0;e<h.length;e++){if(d=h[e][0],g=i[d],g.length){for(f=0;f<g.length;f++)j[j.length]=g[f],this.initSpecific(g[f],d);this.registeredFinalls[d]&&this.registeredFinalls[d]()}delete i[d]}for(f in j)j[f].removeClass(this.widgetClass)},initSpecific:function(a,c,d){var e=this;try{(a.hasClass(this.widgetClass)||d)&&(this.registered[c][0]?require(this.registered[c][0],function(){e.registered[c][1](a),a.addClass(this.widgetClass+"-initialized")}):(this.registered[c][1](a),a.addClass(this.widgetClass+"-initialized")))}catch(d){return b("Error during execution of widget "+c+": "+d.message),a.addClass(this.widgetClass+"-error"),!1}return!0}}});